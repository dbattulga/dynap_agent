version: '3.4'

services:

  job-handler:
    build: .
    volumes:
      - .:/usr/src/app
      - ./jars:/jars
      - ./config:/config
    ports:
      - 5001:80
    #networks:
    #  - agent_network

  jobmanager:
    image: public.registry.u-hopper.com/flink:1.11.3
    # image: flink:1.11.3
    # for armv7
    # image: digitaljazz/flink-1.11.3-armv7:latest
    ports:
      - "8081:8081"
    command: jobmanager
    # for armv7
    # command: jobmanager.sh start-foreground jobmanager
    volumes:
      - ./config/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./config/flink-metrics-prometheus-1.11.3.jar:/opt/flink/lib/flink-metrics-prometheus-1.11.3.jar
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    #networks:
    #  - agent_network

  taskmanager:
    image: flink:1.11.3
    # for armv7
    # image: digitaljazz/flink-1.11.3-armv7:latest
    #ports:
    #  - 9251:9999
    depends_on:
      - jobmanager
    command: taskmanager
    # for armv7
    # command: taskmanager.sh start-foreground -Djobmanager.rpc.address=jobmanager
    volumes:
      - ./config/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml:ro
      - ./config/flink-metrics-prometheus-1.11.3.jar:/opt/flink/lib/flink-metrics-prometheus-1.11.3.jar
    #scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    #networks:
    #  - agent_network

  prometheus:
    image: public.registry.u-hopper.com/prometheus:latest
    # image: prom/prometheus:latest
    user: root
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    ports:
      - '9090:9090'
    #networks:
    #  - agent_network

  node-exporter:
    image: public.registry.u-hopper.com/prom/node-exporter
    # image: prom/node-exporter
    ports:
    # host port: container port
      - '9110:9100'
    #networks:
    #  - agent_network

  cadvisor:
    image: public.registry.u-hopper.com/google/cadvisor
    # image: google/cadvisor:latest
    # for armv7
    # image: budry/cadvisor-arm
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - '8080:8080'
    #networks:
    #  - agent_network

  mosquitto:
    image: public.registry.u-hopper.com/eclipse-mosquitto
    # image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
      - "9001"
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    #networks:
    #  - agent_network


  grafana:
    image: grafana/grafana:latest
    #depends_on:
    #  - prometheus
    ports:
      - "3000:3000"
    #environment:
    #  - GF_SECURITY_ADMIN_PASSWORD=admin
    #volumes:
    #  - ./grafana/provisioning/:/etc/grafana/provisioning/
    #deploy:
    #  replicas: 1
    #  placement:
    #    constraints:
    #      - node.hostname == worker04

#networks:
#  agent_network:
#    driver: bridge